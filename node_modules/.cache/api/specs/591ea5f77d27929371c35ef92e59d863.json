{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Metaphor Search API",
    "description": "A comprehensive API for neural internet-scale search, allowing users to perform queries and retrieve results from a wide variety of sources."
  },
  "servers": [
    {
      "url": "https://api.metaphor.systems"
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "operationId": "search",
        "summary": "Search",
        "description": "Perform a search with a Metaphor prompt-engineered query and retrieve a list of relevant results.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "Here is an article about the state of search:",
                        "description": "The query string."
                      },
                      "useAutoprompt": {
                        "type": "boolean",
                        "description": "If true, your query will be converted to a Metaphor query. Default false."
                      },
                      "type": {
                        "type": "string",
                        "description": "The Type of search, 'keyword' or 'neural'. Default neural."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "numResults": {
                        "type": "integer",
                        "description": "Number of search results to return. Default 10. Max 10 for basic plans. Up to thousands for custom plans.",
                        "example": 10
                      },
                      "includeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                        "example": [
                          "example.com",
                          "sample.net"
                        ]
                      },
                      "excludeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to exclude in the search. If specified, results will not include any from these domains.",
                        "example": [
                          "excludedomain.com",
                          "excludeme.net"
                        ]
                      },
                      "startCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01T00:00:00.000Z"
                      },
                      "endCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31T00:00:00.000Z"
                      },
                      "startPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01T00:00:00.000Z"
                      },
                      "endPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31T00:00:00.000Z"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "A list of search results containing title, URL, published date, author, and score.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title of the search result."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the search result."
                          },
                          "publishedDate": {
                            "type": "string",
                            "nullable": true,
                            "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
                          },
                          "author": {
                            "type": "string",
                            "nullable": true,
                            "description": "If available, the author of the content."
                          },
                          "score": {
                            "type": "number",
                            "nullable": true,
                            "description": "A number from 0 to 1 representing similarity between the query/url and the result."
                          },
                          "id": {
                            "type": "string",
                            "description": "The temporary ID for the document. Useful for /contents endpoint."
                          }
                        }
                      }
                    },
                    "autopromptString": {
                      "type": "string",
                      "description": "The Metaphor query created by the autoprompt functionality."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/snippet": {
      "post": {
        "operationId": "searchSnippet",
        "summary": "Snippet Search",
        "description": "Perform a search with a Metaphor prompt-engineered query and retrieve a list of relevant results along with snippets from the results. Results are reordered by snippet relevance to query.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "Here is an article about the state of search:",
                        "description": "The query string."
                      },
                      "useAutoprompt": {
                        "type": "boolean",
                        "description": "If true, your query will be converted to a Metaphor query. Default false."
                      },
                      "snippetLength": {
                        "type": "integer",
                        "example": 3,
                        "description": "Number of sentences for each snippet. Default 6."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "numResults": {
                        "type": "integer",
                        "description": "Number of search results to return. Default 10. Max 10 for basic plans. Up to thousands for custom plans.",
                        "example": 10
                      },
                      "includeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                        "example": [
                          "example.com",
                          "sample.net"
                        ]
                      },
                      "excludeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to exclude in the search. If specified, results will not include any from these domains.",
                        "example": [
                          "excludedomain.com",
                          "excludeme.net"
                        ]
                      },
                      "startCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01T00:00:00.000Z"
                      },
                      "endCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31T00:00:00.000Z"
                      },
                      "startPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01T00:00:00.000Z"
                      },
                      "endPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31T00:00:00.000Z"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "A list of search results containing title, URL, published date, author, score, snippet, and snippet score.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the search result."
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the search result."
                              },
                              "publishedDate": {
                                "type": "string",
                                "nullable": true,
                                "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
                              },
                              "author": {
                                "type": "string",
                                "nullable": true,
                                "description": "If available, the author of the content."
                              },
                              "score": {
                                "type": "number",
                                "nullable": true,
                                "description": "A number from 0 to 1 representing similarity between the query/url and the result."
                              },
                              "id": {
                                "type": "string",
                                "description": "The temporary ID for the document. Useful for /contents endpoint."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "snippet": {
                                "type": "string",
                                "description": "A relevant extract from the search result content."
                              }
                            }
                          }
                        ]
                      }
                    },
                    "autopromptString": {
                      "type": "string",
                      "description": "The Metaphor query created by the autoprompt functionality."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/findSimilar": {
      "post": {
        "operationId": "findSimilar",
        "summary": "Find similar links",
        "description": "Find similar links to the link provided.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "example": "https://slatestarcodex.com/2014/07/30/meditations-on-moloch/",
                        "description": "The url for which you would like to find similar links"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "numResults": {
                        "type": "integer",
                        "description": "Number of search results to return. Default 10. Max 10 for basic plans. Up to thousands for custom plans.",
                        "example": 10
                      },
                      "includeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                        "example": [
                          "example.com",
                          "sample.net"
                        ]
                      },
                      "excludeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to exclude in the search. If specified, results will not include any from these domains.",
                        "example": [
                          "excludedomain.com",
                          "excludeme.net"
                        ]
                      },
                      "startCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01T00:00:00.000Z"
                      },
                      "endCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31T00:00:00.000Z"
                      },
                      "startPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01T00:00:00.000Z"
                      },
                      "endPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31T00:00:00.000Z"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "A list of search results containing title, URL, published date, author, and score.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title of the search result."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the search result."
                          },
                          "publishedDate": {
                            "type": "string",
                            "nullable": true,
                            "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
                          },
                          "author": {
                            "type": "string",
                            "nullable": true,
                            "description": "If available, the author of the content."
                          },
                          "score": {
                            "type": "number",
                            "nullable": true,
                            "description": "A number from 0 to 1 representing similarity between the query/url and the result."
                          },
                          "id": {
                            "type": "string",
                            "description": "The temporary ID for the document. Useful for /contents endpoint."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contents": {
      "get": {
        "operationId": "getContents",
        "summary": "Get contents of documents",
        "description": "Retrieve contents of documents based on a list of document IDs.",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "description": "An array of document IDs obtained from either /search or /findSimilar endpoints.",
            "example": [
              "31gfpFb2i3Hbsm8nDE33YA",
              "1aI5kUIO8VuLxT3db47cnM"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contents": {
                      "type": "array",
                      "description": "A list of document contents containing id, URL, title, and extract.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the document."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the document."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the document."
                          },
                          "extract": {
                            "type": "string",
                            "description": "The first 1000 tokens of content in the document."
                          },
                          "author": {
                            "type": "string",
                            "nullable": true,
                            "description": "If available, the author of the content."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    },
    "schemas": {
      "CommonRequest": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "description": "Number of search results to return. Default 10. Max 10 for basic plans. Up to thousands for custom plans.",
            "example": 10
          },
          "includeDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of domains to include in the search. If specified, results will only come from these domains.",
            "example": [
              "example.com",
              "sample.net"
            ]
          },
          "excludeDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of domains to exclude in the search. If specified, results will not include any from these domains.",
            "example": [
              "excludedomain.com",
              "excludeme.net"
            ]
          },
          "startCrawlDate": {
            "type": "string",
            "format": "date-time",
            "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "endCrawlDate": {
            "type": "string",
            "format": "date-time",
            "description": "Crawl date refers to the date that Metaphor discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
            "example": "2023-12-31T00:00:00.000Z"
          },
          "startPublishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "endPublishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
            "example": "2023-12-31T00:00:00.000Z"
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the search result."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the search result."
          },
          "publishedDate": {
            "type": "string",
            "nullable": true,
            "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
          },
          "author": {
            "type": "string",
            "nullable": true,
            "description": "If available, the author of the content."
          },
          "score": {
            "type": "number",
            "nullable": true,
            "description": "A number from 0 to 1 representing similarity between the query/url and the result."
          },
          "id": {
            "type": "string",
            "description": "The temporary ID for the document. Useful for /contents endpoint."
          }
        }
      },
      "SnippetResult": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the search result."
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "The URL of the search result."
              },
              "publishedDate": {
                "type": "string",
                "nullable": true,
                "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
              },
              "author": {
                "type": "string",
                "nullable": true,
                "description": "If available, the author of the content."
              },
              "score": {
                "type": "number",
                "nullable": true,
                "description": "A number from 0 to 1 representing similarity between the query/url and the result."
              },
              "id": {
                "type": "string",
                "description": "The temporary ID for the document. Useful for /contents endpoint."
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "snippet": {
                "type": "string",
                "description": "A relevant extract from the search result content."
              }
            }
          }
        ]
      }
    },
    "responses": {
      "SearchResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "description": "A list of search results containing title, URL, published date, author, and score.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the search result."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the search result."
                      },
                      "publishedDate": {
                        "type": "string",
                        "nullable": true,
                        "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
                      },
                      "author": {
                        "type": "string",
                        "nullable": true,
                        "description": "If available, the author of the content."
                      },
                      "score": {
                        "type": "number",
                        "nullable": true,
                        "description": "A number from 0 to 1 representing similarity between the query/url and the result."
                      },
                      "id": {
                        "type": "string",
                        "description": "The temporary ID for the document. Useful for /contents endpoint."
                      }
                    }
                  }
                },
                "autopromptString": {
                  "type": "string",
                  "description": "The Metaphor query created by the autoprompt functionality."
                }
              }
            }
          }
        }
      },
      "SnippetSearchResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "description": "A list of search results containing title, URL, published date, author, score, snippet, and snippet score.",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title of the search result."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL of the search result."
                          },
                          "publishedDate": {
                            "type": "string",
                            "nullable": true,
                            "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
                          },
                          "author": {
                            "type": "string",
                            "nullable": true,
                            "description": "If available, the author of the content."
                          },
                          "score": {
                            "type": "number",
                            "nullable": true,
                            "description": "A number from 0 to 1 representing similarity between the query/url and the result."
                          },
                          "id": {
                            "type": "string",
                            "description": "The temporary ID for the document. Useful for /contents endpoint."
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "snippet": {
                            "type": "string",
                            "description": "A relevant extract from the search result content."
                          }
                        }
                      }
                    ]
                  }
                },
                "autopromptString": {
                  "type": "string",
                  "description": "The Metaphor query created by the autoprompt functionality."
                }
              }
            }
          }
        }
      },
      "FindSimilarResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "description": "A list of search results containing title, URL, published date, author, and score.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the search result."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the search result."
                      },
                      "publishedDate": {
                        "type": "string",
                        "nullable": true,
                        "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD."
                      },
                      "author": {
                        "type": "string",
                        "nullable": true,
                        "description": "If available, the author of the content."
                      },
                      "score": {
                        "type": "number",
                        "nullable": true,
                        "description": "A number from 0 to 1 representing similarity between the query/url and the result."
                      },
                      "id": {
                        "type": "string",
                        "description": "The temporary ID for the document. Useful for /contents endpoint."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ContentsResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "contents": {
                  "type": "array",
                  "description": "A list of document contents containing id, URL, title, and extract.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the document."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URL of the document."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the document."
                      },
                      "extract": {
                        "type": "string",
                        "description": "The first 1000 tokens of content in the document."
                      },
                      "author": {
                        "type": "string",
                        "nullable": true,
                        "description": "If available, the author of the content."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "apikey": []
    }
  ]
}