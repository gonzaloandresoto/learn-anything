{"ast":null,"code":"var _jsxFileName = \"/Users/gonzalosoto/ola-learn/client/src/context/TopicContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport useAuthContext from '../hooks/useAuthContext';\n\n// axios.defaults.baseURL = 'https://learn-anything-b61f2394c70a.herokuapp.com/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\naxios.defaults.withCredentials = true;\nconst TopicContext = /*#__PURE__*/createContext({});\nexport const TopicProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  // V2 Onwards\n  const [topic, setTopic] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [courseData, setCourseData] = useState(null);\n  const [keyTerms, setKeyTerms] = useState(null);\n  const [suggestedQuestions, setSuggestedQuestions] = useState(null);\n  const [relevantQuestions, setRelevantQuestions] = useState(null);\n  const [addedSlide, setAddedSlide] = useState(null);\n  const [indexBeforeAdd, setIndexBeforeAdd] = useState(null);\n  const [showSidesheet, setShowSidesheet] = useState(false);\n  const [activeCourseId, setCourseTopicId] = useState(null);\n  const [userCourses, setUserCourses] = useState(null);\n  const [focusedSlide, setFocusedSlide] = useState(null);\n  const [courseConversation, setCourseConversation] = useState(null);\n  const navigate = useNavigate();\n  const createCourse = async topic => {\n    try {\n      var _res$data, _res$data2, _res$data3, _res$data4;\n      setIsLoading(true);\n      console.log('Sent course to DB');\n      const res = await axios.post('/create_course', {\n        topic,\n        userId: user === null || user === void 0 ? void 0 : user.id\n      });\n      console.log(res === null || res === void 0 ? void 0 : res.data);\n      setCourseData(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.main);\n      setKeyTerms(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.keyTerms);\n      setSuggestedQuestions(res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.suggestedQuestions);\n      setCourseTopicId(res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.Id);\n      setIsLoading(false);\n      navigate('/deep-dive');\n    } catch (error) {\n      console.log('Error creating course:', error);\n    }\n  };\n  const getRelevantQuestions = async paragraph => {\n    try {\n      console.log('Sent relevant questions to DB');\n      const res = await axios.post('/relevant_questions', {\n        paragraph\n      });\n      console.log(res === null || res === void 0 ? void 0 : res.data);\n      setRelevantQuestions(res === null || res === void 0 ? void 0 : res.data);\n    } catch (error) {\n      console.log('Error getting relevant questions:', error);\n    }\n  };\n  const addSlide = async question => {\n    try {\n      console.log('Sent question for slide to DB');\n      const res = await axios.post('/add_slide', {\n        question\n      });\n      console.log(res === null || res === void 0 ? void 0 : res.data);\n      setAddedSlide(res === null || res === void 0 ? void 0 : res.data);\n      if (courseData && courseData.topics) {\n        const updatedTopics = [...courseData.topics];\n        updatedTopics.splice(indexBeforeAdd + 1, 0, res.data);\n        setCourseData({\n          ...courseData,\n          topics: updatedTopics\n        });\n        console.log('Updated course data:', {\n          courseData,\n          topics: updatedTopics\n        });\n        console.log('recent course id:', activeCourseId);\n        updateCourseData(activeCourseId, {\n          ...courseData,\n          topics: updatedTopics\n        });\n      }\n    } catch (error) {\n      console.log('Error adding slide:', error);\n    }\n  };\n  const updateCourseData = async (courseId, courseData) => {\n    try {\n      console.log('Sent updated course data to DB');\n      const res = await axios.post('/update_course_data', {\n        courseId,\n        courseData\n      });\n    } catch (error) {\n      console.log('Error updating course data:', error);\n    }\n  };\n  useEffect(() => {\n    const getUserCourses = async () => {\n      try {\n        console.log('Sent request for user courses to DB');\n        const res = await axios.post('/user_courses', {\n          userId: user === null || user === void 0 ? void 0 : user.id\n        });\n        console.log(res === null || res === void 0 ? void 0 : res.data);\n        setUserCourses(res === null || res === void 0 ? void 0 : res.data);\n      } catch (error) {\n        console.log('Error getting user courses:', error);\n      }\n    };\n    getUserCourses();\n  }, [user === null || user === void 0 ? void 0 : user.id]);\n  const makeActiveCourse = course => {\n    console.log('Making course active', course);\n    console.log('course.main', course.main);\n    console.log('course?.key_terms', course === null || course === void 0 ? void 0 : course.keyTerms);\n    setCourseData(course.main);\n    setKeyTerms(course === null || course === void 0 ? void 0 : course.keyTerms);\n    setSuggestedQuestions(course === null || course === void 0 ? void 0 : course.suggestedQuestions);\n    setCourseTopicId(course === null || course === void 0 ? void 0 : course.Id);\n    navigate('/deep-dive');\n  };\n  const sendConversationMessage = async message => {\n    try {\n      const userMessage = {\n        role: 'user',\n        content: message\n      };\n      const newConversation = [...courseConversation, userMessage];\n      setCourseConversation(newConversation);\n      const res = await axios.post('/chat_course', {\n        conversation: newConversation\n      });\n      const assistantMessage = {\n        role: 'assistant',\n        content: res === null || res === void 0 ? void 0 : res.data\n      };\n      setCourseConversation(prevConversation => [...prevConversation, assistantMessage]);\n    } catch (error) {\n      console.log('Error sending message:', error);\n    }\n  };\n  useEffect(() => {\n    setCourseConversation([{\n      role: 'system',\n      content: `You are an expert in ${courseData === null || courseData === void 0 ? void 0 : courseData.title}. You are here to help the user learn about the topic they are interested in. Do not answer unrelated questions.`\n    }]);\n  }, [courseData]);\n  return /*#__PURE__*/_jsxDEV(TopicContext.Provider, {\n    value: {\n      topic,\n      setTopic,\n      isLoading,\n      setIsLoading,\n      showSidesheet,\n      setShowSidesheet,\n      courseData,\n      setCourseData,\n      keyTerms,\n      setKeyTerms,\n      suggestedQuestions,\n      setSuggestedQuestions,\n      createCourse,\n      relevantQuestions,\n      setRelevantQuestions,\n      getRelevantQuestions,\n      addSlide,\n      indexBeforeAdd,\n      setIndexBeforeAdd,\n      activeCourseId,\n      setCourseTopicId,\n      userCourses,\n      makeActiveCourse,\n      focusedSlide,\n      setFocusedSlide,\n      courseConversation,\n      setCourseConversation,\n      sendConversationMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicProvider, \"VnkmR+eCHPiz6SUPFtWk4ZtbO8g=\", false, function () {\n  return [useAuthContext, useNavigate];\n});\n_c = TopicProvider;\nexport default TopicContext;\n\n// const [topic, setTopic] = useState('');\n// const [briefSummary, setBriefSummary] = useState({});\n// const [activeTopic, setActiveTopic] = useState('');\n// const [funLinks, setFunLinks] = useState([]);\n// const [learningPlan, setLearningPlan] = useState([]);\n// const [deepdiveData, setDeepdiveData] = useState([]);\n// const [quizData, setQuizData] = useState([]);\n// const [recentTopics, setRecentTopics] = useState([]);\n\n// const searchTopic = async (paragraph) => {\n//   try {\n//     console.log('Sent search to DB');\n//     setIsLoading(true);\n//     const res = await axios.post('/search_concept', { paragraph });\n//     console.log(res?.data);\n//     setBriefSummary(res?.data?.data);\n//     setActiveTopic(res?.data?.data?.topics?.[0]?.name);\n//     setFunLinks(res?.data?.metaphorResults);\n//   } catch (error) {\n//     console.log(error);\n//   } finally {\n//     setIsLoading(false);\n//   }\n// };\n\n// const deepdiveIntoTopic = async (topic, activeTopic) => {\n//   try {\n//     console.log('Sent deepdive to DB');\n//     setIsLoading(true);\n//     const res = await axios.post('/deepdive_topic', { topic, activeTopic });\n//     console.log(res?.data?.choices?.[0]?.message?.content);\n//     setDeepdiveData(JSON.parse(res?.data?.choices?.[0]?.message?.content));\n//     navigate('/topic-deepdive');\n//   } catch (error) {\n//     console.log(error);\n//   } finally {\n//     setIsLoading(false);\n//   }\n// };\n\n// const quizAboutTopic = async (topic, activeTopic) => {\n//   try {\n//     console.log('Sent deepdive to DB');\n//     setIsLoading(true);\n//     const res = await axios.post('/quiz_topic', { topic, activeTopic });\n//     console.log(res?.data?.choices?.[0]?.message?.content);\n//     setQuizData(JSON.parse(res?.data?.choices?.[0]?.message?.content));\n//     navigate('/topic-quiz');\n//   } catch (error) {\n//     console.log(error);\n//   } finally {\n//     setIsLoading(false);\n//   }\n// };\n\n// useEffect(() => {\n//   const getRecentTopics = async () => {\n//     try {\n//       const res = await axios.get('/recent_topics');\n//       setRecentTopics(res.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   getRecentTopics();\n// }, []);\n\n// const getKeywords = async (paragraph) => {\n//   try {\n//     const res = await axios.post('/extract_keywords', { paragraph });\n//     console.log(res.data);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\nvar _c;\n$RefreshReg$(_c, \"TopicProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useNavigate","axios","useAuthContext","jsxDEV","_jsxDEV","defaults","baseURL","withCredentials","TopicContext","TopicProvider","children","_s","user","topic","setTopic","isLoading","setIsLoading","courseData","setCourseData","keyTerms","setKeyTerms","suggestedQuestions","setSuggestedQuestions","relevantQuestions","setRelevantQuestions","addedSlide","setAddedSlide","indexBeforeAdd","setIndexBeforeAdd","showSidesheet","setShowSidesheet","activeCourseId","setCourseTopicId","userCourses","setUserCourses","focusedSlide","setFocusedSlide","courseConversation","setCourseConversation","navigate","createCourse","_res$data","_res$data2","_res$data3","_res$data4","console","log","res","post","userId","id","data","main","Id","error","getRelevantQuestions","paragraph","addSlide","question","topics","updatedTopics","splice","updateCourseData","courseId","getUserCourses","makeActiveCourse","course","sendConversationMessage","message","userMessage","role","content","newConversation","conversation","assistantMessage","prevConversation","title","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gonzalosoto/ola-learn/client/src/context/TopicContext.jsx"],"sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport useAuthContext from '../hooks/useAuthContext';\n\n// axios.defaults.baseURL = 'https://learn-anything-b61f2394c70a.herokuapp.com/';\naxios.defaults.baseURL = 'http://localhost:8000';\naxios.defaults.withCredentials = true;\n\nconst TopicContext = createContext({});\n\nexport const TopicProvider = ({ children }) => {\n  const { user } = useAuthContext();\n  // V2 Onwards\n  const [topic, setTopic] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [courseData, setCourseData] = useState(null);\n  const [keyTerms, setKeyTerms] = useState(null);\n  const [suggestedQuestions, setSuggestedQuestions] = useState(null);\n  const [relevantQuestions, setRelevantQuestions] = useState(null);\n  const [addedSlide, setAddedSlide] = useState(null);\n  const [indexBeforeAdd, setIndexBeforeAdd] = useState(null);\n  const [showSidesheet, setShowSidesheet] = useState(false);\n  const [activeCourseId, setCourseTopicId] = useState(null);\n  const [userCourses, setUserCourses] = useState(null);\n  const [focusedSlide, setFocusedSlide] = useState(null);\n  const [courseConversation, setCourseConversation] = useState(null);\n\n  const navigate = useNavigate();\n\n  const createCourse = async (topic) => {\n    try {\n      setIsLoading(true);\n      console.log('Sent course to DB');\n      const res = await axios.post('/create_course', {\n        topic,\n        userId: user?.id,\n      });\n      console.log(res?.data);\n      setCourseData(res?.data?.main);\n      setKeyTerms(res?.data?.keyTerms);\n      setSuggestedQuestions(res?.data?.suggestedQuestions);\n      setCourseTopicId(res?.data?.Id);\n      setIsLoading(false);\n      navigate('/deep-dive');\n    } catch (error) {\n      console.log('Error creating course:', error);\n    }\n  };\n\n  const getRelevantQuestions = async (paragraph) => {\n    try {\n      console.log('Sent relevant questions to DB');\n      const res = await axios.post('/relevant_questions', { paragraph });\n      console.log(res?.data);\n      setRelevantQuestions(res?.data);\n    } catch (error) {\n      console.log('Error getting relevant questions:', error);\n    }\n  };\n\n  const addSlide = async (question) => {\n    try {\n      console.log('Sent question for slide to DB');\n      const res = await axios.post('/add_slide', { question });\n      console.log(res?.data);\n      setAddedSlide(res?.data);\n\n      if (courseData && courseData.topics) {\n        const updatedTopics = [...courseData.topics];\n        updatedTopics.splice(indexBeforeAdd + 1, 0, res.data);\n        setCourseData({ ...courseData, topics: updatedTopics });\n        console.log('Updated course data:', {\n          courseData,\n          topics: updatedTopics,\n        });\n        console.log('recent course id:', activeCourseId);\n        updateCourseData(activeCourseId, {\n          ...courseData,\n          topics: updatedTopics,\n        });\n      }\n    } catch (error) {\n      console.log('Error adding slide:', error);\n    }\n  };\n\n  const updateCourseData = async (courseId, courseData) => {\n    try {\n      console.log('Sent updated course data to DB');\n      const res = await axios.post('/update_course_data', {\n        courseId,\n        courseData,\n      });\n    } catch (error) {\n      console.log('Error updating course data:', error);\n    }\n  };\n\n  useEffect(() => {\n    const getUserCourses = async () => {\n      try {\n        console.log('Sent request for user courses to DB');\n\n        const res = await axios.post('/user_courses', { userId: user?.id });\n\n        console.log(res?.data);\n        setUserCourses(res?.data);\n      } catch (error) {\n        console.log('Error getting user courses:', error);\n      }\n    };\n\n    getUserCourses();\n  }, [user?.id]);\n\n  const makeActiveCourse = (course) => {\n    console.log('Making course active', course);\n    console.log('course.main', course.main);\n    console.log('course?.key_terms', course?.keyTerms);\n    setCourseData(course.main);\n    setKeyTerms(course?.keyTerms);\n    setSuggestedQuestions(course?.suggestedQuestions);\n    setCourseTopicId(course?.Id);\n    navigate('/deep-dive');\n  };\n\n  const sendConversationMessage = async (message) => {\n    try {\n      const userMessage = { role: 'user', content: message };\n      const newConversation = [...courseConversation, userMessage];\n\n      setCourseConversation(newConversation);\n      const res = await axios.post('/chat_course', {\n        conversation: newConversation,\n      });\n\n      const assistantMessage = { role: 'assistant', content: res?.data };\n      setCourseConversation((prevConversation) => [\n        ...prevConversation,\n        assistantMessage,\n      ]);\n    } catch (error) {\n      console.log('Error sending message:', error);\n    }\n  };\n\n  useEffect(() => {\n    setCourseConversation([\n      {\n        role: 'system',\n        content: `You are an expert in ${courseData?.title}. You are here to help the user learn about the topic they are interested in. Do not answer unrelated questions.`,\n      },\n    ]);\n  }, [courseData]);\n\n  return (\n    <TopicContext.Provider\n      value={{\n        topic,\n        setTopic,\n        isLoading,\n        setIsLoading,\n        showSidesheet,\n        setShowSidesheet,\n        courseData,\n        setCourseData,\n        keyTerms,\n        setKeyTerms,\n        suggestedQuestions,\n        setSuggestedQuestions,\n        createCourse,\n        relevantQuestions,\n        setRelevantQuestions,\n        getRelevantQuestions,\n        addSlide,\n        indexBeforeAdd,\n        setIndexBeforeAdd,\n        activeCourseId,\n        setCourseTopicId,\n        userCourses,\n        makeActiveCourse,\n        focusedSlide,\n        setFocusedSlide,\n        courseConversation,\n        setCourseConversation,\n        sendConversationMessage,\n      }}\n    >\n      {children}\n    </TopicContext.Provider>\n  );\n};\n\nexport default TopicContext;\n\n// const [topic, setTopic] = useState('');\n// const [briefSummary, setBriefSummary] = useState({});\n// const [activeTopic, setActiveTopic] = useState('');\n// const [funLinks, setFunLinks] = useState([]);\n// const [learningPlan, setLearningPlan] = useState([]);\n// const [deepdiveData, setDeepdiveData] = useState([]);\n// const [quizData, setQuizData] = useState([]);\n// const [recentTopics, setRecentTopics] = useState([]);\n\n// const searchTopic = async (paragraph) => {\n//   try {\n//     console.log('Sent search to DB');\n//     setIsLoading(true);\n//     const res = await axios.post('/search_concept', { paragraph });\n//     console.log(res?.data);\n//     setBriefSummary(res?.data?.data);\n//     setActiveTopic(res?.data?.data?.topics?.[0]?.name);\n//     setFunLinks(res?.data?.metaphorResults);\n//   } catch (error) {\n//     console.log(error);\n//   } finally {\n//     setIsLoading(false);\n//   }\n// };\n\n// const deepdiveIntoTopic = async (topic, activeTopic) => {\n//   try {\n//     console.log('Sent deepdive to DB');\n//     setIsLoading(true);\n//     const res = await axios.post('/deepdive_topic', { topic, activeTopic });\n//     console.log(res?.data?.choices?.[0]?.message?.content);\n//     setDeepdiveData(JSON.parse(res?.data?.choices?.[0]?.message?.content));\n//     navigate('/topic-deepdive');\n//   } catch (error) {\n//     console.log(error);\n//   } finally {\n//     setIsLoading(false);\n//   }\n// };\n\n// const quizAboutTopic = async (topic, activeTopic) => {\n//   try {\n//     console.log('Sent deepdive to DB');\n//     setIsLoading(true);\n//     const res = await axios.post('/quiz_topic', { topic, activeTopic });\n//     console.log(res?.data?.choices?.[0]?.message?.content);\n//     setQuizData(JSON.parse(res?.data?.choices?.[0]?.message?.content));\n//     navigate('/topic-quiz');\n//   } catch (error) {\n//     console.log(error);\n//   } finally {\n//     setIsLoading(false);\n//   }\n// };\n\n// useEffect(() => {\n//   const getRecentTopics = async () => {\n//     try {\n//       const res = await axios.get('/recent_topics');\n//       setRecentTopics(res.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   getRecentTopics();\n// }, []);\n\n// const getKeywords = async (paragraph) => {\n//   try {\n//     const res = await axios.post('/extract_keywords', { paragraph });\n//     console.log(res.data);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n"],"mappings":"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jB,iBAAiB;MACjBC,oBAAoB;MACpB+B,oBAAoB;MACpBE,QAAQ;MACR9B,cAAc;MACdC,iBAAiB;MACjBG,cAAc;MACdC,gBAAgB;MAChBC,WAAW;MACXgC,gBAAgB;MAChB9B,YAAY;MACZC,eAAe;MACfC,kBAAkB;MAClBC,qBAAqB;MACrB6B;IACF,CAAE;IAAAzD,QAAA,EAEDA;EAAQ;IAAAqE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACvE,EAAA,CArLWF,aAAa;EAAA,QACPP,cAAc,EAgBdF,WAAW;AAAA;AAAAmF,EAAA,GAjBjB1E,aAAa;AAuL1B,eAAeD,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}